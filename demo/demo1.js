var config={ x:250, y:250, cWidth:360, cHeight:360, offset:10, radius:120, radiusIn:60}config.x=config.cWidth/2;config.y=config.cHeight/2;
var c = document.getElementById('myCanvas');c.width=config.cWidth;c.height=config.cHeight;
if(c.getContext){
 var context = c.getContext('2d'); iniDraw(context);  c.addEventListener('click',function(e){  var p = getEventPosition(e);  reDraw(p,context); },false);  c.addEventListener('mousemove',function(e){  iniDraw(context); },false);}
function iniDraw(context){ context.clearRect(0,0,config.cWidth,config.cHeight);  //画背景色 context.fillStyle ="rgba(90,90,90,1)"; context.fillRect(0,0,config.cWidth,config.cHeight);  var x,y,radius; radius=config.radius; radiusIn=radius/2;  //通道1 context.strokeStyle ="rgb(6,55,66)"; context.fillStyle ="rgba(94,191,191,1)"; context.beginPath(); x=config.x-config.offset; y=config.y-config.offset; context.moveTo(x-radiusIn,y); context.lineTo(x-radius,y); context.arc(x,y,radius,Math.PI,Math.PI*3/2,false); context.lineTo(x,y-radiusIn); context.arc(x,y,radiusIn,Math.PI*3/2,Math.PI,true); context.closePath(); context.fill();  context.textAlign="middle"; context.font = ' 400 18px Unknown Font, sans-serif'; context.fillStyle ="rgb(255,255,255)"; context.fillText("通道1",x-radiusIn,y-radiusIn);  //通道2 context.strokeStyle ="rgb(6,55,66)"; context.fillStyle ="rgba(94,191,191,1)"; context.beginPath(); x=config.x+config.offset; y=config.y-config.offset; context.moveTo(x,y-radiusIn); context.lineTo(x,y-radius); context.arc(x,y,radius,Math.PI*3/2,0,false); context.lineTo(x+radiusIn,y); context.arc(x,y,radiusIn,0,Math.PI*3/2,true); context.closePath(); context.fill();  context.textAlign="middle"; context.font = ' 400 18px Unknown Font, sans-serif'; context.fillStyle ="rgb(255,255,255)"; context.fillText("通道2",x+radiusIn,y-radiusIn);  //通道3 context.strokeStyle ="rgb(6,55,66)"; context.fillStyle ="rgba(94,191,191,1)"; context.beginPath(); x=config.x+config.offset; y=config.y+config.offset; context.moveTo(x+radiusIn,y); context.lineTo(x+radius,y); context.arc(x,y,radius,0,Math.PI/2,false); context.lineTo(x,y+radiusIn); context.arc(x,y,radiusIn,Math.PI/2,0,true); context.closePath(); context.fill();  context.textAlign="middle"; context.font = ' 400 18px Unknown Font, sans-serif'; context.fillStyle ="rgb(255,255,255)"; context.fillText("通道3",x+radiusIn,y+radiusIn);  //通道4 context.strokeStyle ="rgb(6,55,66)"; context.fillStyle ="rgba(94,191,191,1)"; context.beginPath(); x=config.x-config.offset; y=config.y+config.offset; context.moveTo(x,y+radiusIn); context.lineTo(x,y+radius); context.arc(x,y,radius,Math.PI/2,Math.PI,false); context.lineTo(x-radiusIn,y); context.arc(x,y,radiusIn,Math.PI,Math.PI/2,true); context.closePath(); context.fill();  context.textAlign="middle"; context.font = ' 400 18px Unknown Font, sans-serif'; context.fillStyle ="rgb(255,255,255)"; context.fillText("通道4",x-radiusIn,y+radiusIn);  //全开/关 context.strokeStyle ="rgb(6,55,66)"; context.fillStyle ="rgba(94,191,191,1)"; context.beginPath(); x=config.x; y=config.y; context.arc(x,y,radiusIn,0,Math.PI*2,true); context.fill();}
 function reDraw(p,context){   context.clearRect(0,0,config.cWidth,config.cHeight);  //画背景色 context.fillStyle ="rgba(90,90,90,1)"; context.fillRect(0,0,config.cWidth,config.cHeight);  var x,y,radius; radius=config.radius; radiusIn=radius/2;  //通道1 context.strokeStyle ="rgb(6,55,66)"; context.fillStyle ="rgba(94,191,191,1)"; context.beginPath(); x=config.x-config.offset; y=config.y-config.offset; context.moveTo(x-radiusIn,y); context.lineTo(x-radius,y); context.arc(x,y,radius,Math.PI,Math.PI*3/2,false); context.lineTo(x,y-radiusIn); context.arc(x,y,radiusIn,Math.PI*3/2,Math.PI,true); context.closePath(); if(p && context.isPointInPath(p.x,p.y)){  context.fillStyle = "#0033cc"; } context.fill();  context.textAlign="middle"; context.font = ' 400 18px Unknown Font, sans-serif'; context.fillStyle ="rgb(255,255,255)"; context.fillText("通道1",x-radiusIn,y-radiusIn);  //通道2 context.strokeStyle ="rgb(6,55,66)"; context.fillStyle ="rgba(94,191,191,1)"; context.beginPath(); x=config.x+config.offset; y=config.y-config.offset; context.moveTo(x,y-radiusIn); context.lineTo(x,y-radius); context.arc(x,y,radius,Math.PI*3/2,0,false); context.lineTo(x+radiusIn,y); context.arc(x,y,radiusIn,0,Math.PI*3/2,true); context.closePath(); if(p && context.isPointInPath(p.x,p.y)){  context.fillStyle = "#0033cc"; } context.fill();  context.textAlign="middle"; context.font = ' 400 18px Unknown Font, sans-serif'; context.fillStyle ="rgb(255,255,255)"; context.fillText("通道2",x+radiusIn,y-radiusIn);  //通道3 context.strokeStyle ="rgb(6,55,66)"; context.fillStyle ="rgba(94,191,191,1)"; context.beginPath(); x=config.x+config.offset; y=config.y+config.offset; context.moveTo(x+radiusIn,y); context.lineTo(x+radius,y); context.arc(x,y,radius,0,Math.PI/2,false); context.lineTo(x,y+radiusIn); context.arc(x,y,radiusIn,Math.PI/2,0,true); context.closePath(); if(p && context.isPointInPath(p.x,p.y)){  context.fillStyle = "#0033cc"; } context.fill();  context.textAlign="middle"; context.font = ' 400 18px Unknown Font, sans-serif'; context.fillStyle ="rgb(255,255,255)"; context.fillText("通道3",x+radiusIn,y+radiusIn);   //通道4 context.strokeStyle ="rgb(6,55,66)"; context.fillStyle ="rgba(94,191,191,1)"; context.beginPath(); x=config.x-config.offset; y=config.y+config.offset; context.moveTo(x,y+radiusIn); context.lineTo(x,y+radius); context.arc(x,y,radius,Math.PI/2,Math.PI,false); context.lineTo(x-radiusIn,y); context.arc(x,y,radiusIn,Math.PI,Math.PI/2,true); context.closePath(); if(p && context.isPointInPath(p.x,p.y)){  context.fillStyle = "#0033cc"; } context.fill();  context.textAlign="middle"; context.font = ' 400 18px Unknown Font, sans-serif'; context.fillStyle ="rgb(255,255,255)"; context.fillText("通道4",x-radiusIn,y+radiusIn);  //全开/关 context.strokeStyle ="rgb(6,55,66)"; context.fillStyle ="rgba(94,191,191,1)"; context.beginPath(); x=config.x; y=config.y; context.arc(x,y,radiusIn,0,Math.PI*2,true); if(p && context.isPointInPath(p.x,p.y)){  context.fillStyle = "#0033cc"; } context.fill();}
function getEventPosition(event){ 
 var x,y;
 if(event.layerX || event.layerX == 0){
  x = event.layerX;  y = event.layerY; }else if(event.offsetX || event.offsetX == 0){
  x = event.offsetX;  y = event.offsetY; } return {x:x,y:y};}
